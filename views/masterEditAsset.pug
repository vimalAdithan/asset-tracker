doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Edit Asset
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css")
  body
    .container.mt-5
      .row.justify-content-center
        .col-md-6
          .card
            .card-header.text-center
              h3 Edit Asset
            .card-body
              form#assetForm
                .mb-3
                  label.form-label(for="make") Asset Make
                  input.form-control(type="text", id="make", name="make", required=true)
                .mb-3
                  label.form-label(for="model") Asset Model
                  input.form-control(type="text", id="model", name="model", required=true)
                .mb-3
                  label.form-label(for="description") Description
                  textarea.form-control(id="description", name="description", rows="3", required)
                .mb-3
                  label.form-label(for="serialNo") Serial No
                  input.form-control(type="text", id="serialNo", name="serialNo", disabled)
                button.btn.btn-primary.w-100(type="submit") Update
                .mt-3#message
                .mt-4.text-center
                a.btn.btn-secondary(href="/master") ‚Üê Back
    script.
      const token = localStorage.getItem('token');
      const urlParts = window.location.pathname.split('/');
      const assetId = urlParts[urlParts.length - 1];

      if (!token) {
        alert("Authentication token not found. Please log in.")
        window.location.href = '/';
      }

      const form = document.getElementById('assetForm');
      const submitButton = form.querySelector('button[type="submit"]');
      const messageDiv = document.getElementById('message');

      async function loadAsset() {
        try {
          const res = await fetch(`/api/asset/${assetId}`, {
            headers: { 'Authorization': token }
          });
          const result = await res.json();
          if (result.code === 200) {
            const asset = result.value;
            form.make.value = asset.make;
            form.model.value = asset.model;
            form.description.value = asset.description;
            form.serialNo.value = asset.serialNo;
          } else {
            messageDiv.innerHTML = `<div class="alert alert-danger">${result.msg}</div>`;
          }
        } catch (err) {
          messageDiv.innerHTML = `<div class="alert alert-danger">Failed to load asset data</div>`;
        }
      }

      loadAsset();

    script.
      form.addEventListener('submit', async function (e) {
        e.preventDefault();
        const make = form.make.value.trim().toUpperCase();
        const model = form.model.value.trim().toUpperCase();
        const description = form.description.value.trim();

        messageDiv.innerHTML = '';

        if (make.length < 2) {
          messageDiv.innerHTML = '<div class="alert alert-warning">Asset Make must be at least 2 characters long.</div>';
          return;
        }

        if (model.length < 1) {
          messageDiv.innerHTML = '<div class="alert alert-warning">Asset Model is required.</div>';
          return;
        }

        if (description.length < 5) {
          messageDiv.innerHTML = '<div class="alert alert-warning">Asset Description should be at least 5 characters long.</div>';
          return;
        }

        submitButton.disabled = true;
        submitButton.innerText = "Updating...";

        const formData = {
          make,
          model,
          description,
        };
        try {
          const response = await fetch(`/api/asset/${assetId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': token
            },
            body: JSON.stringify(formData)
          });

          const result = await response.json();

          if (result.code === 200) {
            messageDiv.innerHTML = '<div class="alert alert-success">Asset updated successfully!</div>';
          } else {
            messageDiv.innerHTML = `<div class="alert alert-danger">Error: ${result.msg}</div>`;
          }
        } catch (error) {
          messageDiv.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
        } finally {
          submitButton.disabled = false;
          submitButton.innerText = "Update";
        }
      });

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
