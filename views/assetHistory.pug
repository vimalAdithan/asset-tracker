doctype html
html
  head
    title Asset History - Asset Tracker
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.4/dist/css/bootstrap.min.css" integrity="sha384-DQvkBjpPgn7RC31MCQoOeC9TI2kdqa4+BSgNMNj8v77fdC77Kj5zpWFTJaaAoMbC" crossorigin="anonymous")
    style.
      .email-link {
        color: inherit;
        text-decoration: none;
        transition: 0.1s;
      }
      .email-link:hover {
        color: var(--bs-primary);
        text-decoration: underline;
      }

  body
    header.bg-primary.text-white.py-3.mb-4
      .container.d-flex.justify-content-between.align-items-center
        h1.h4.mb-0 Asset History
        nav
          a.btn.btn-light(href="/master") ← Back
    main.container.mt-4
      .d-flex.justify-content-end.align-items-center.mb-3.employee-actions
        .d-flex.align-items-center.gap-2.flex-nowrap
          input#employeeSearch.form-control(type="text", placeholder="Search employees...",style="width: 250px;")
          select#statusFilter.form-select
            option(value="all") All
            option(value="active") Active
            option(value="inactive") Inactive
          button(type="button")#searchBtn.btn.btn-outline-secondary Search
      .employee-list
        .table-responsive
          table#employeeTable.table.table-hover.table-bordered.align-middle.text-center
            thead.table-light
              tr
                th Email
                th Name
                th Phone No
                th Status
            tbody
      .employee-history.d-none
        .d-flex.justify-content-between.align-items-center.mb-3
          h4.mb-0#assetHistoryTitle Asset History
          button.btn.btn-sm.btn-outline-secondary#backToList Back
        .table-responsive
          table#historyTable.table.table-hover.table-bordered.align-middle.text-center
            thead.table-light
              tr
                th Asset Make
                th Asset SerialNo
                th Asset Category
                th Asset Provided By
                th Action
                th Reason
                th Date
            tbody

    script.
      var token = localStorage.getItem('token');
      if (!token) {
        alert("Authentication token not found. Please log in.")
        window.location.href = '/';
      }

    script.
      const employeeSearch = document.getElementById("employeeSearch");
      const statusFilter = document.getElementById("statusFilter");
      const searchBtn = document.getElementById("searchBtn");

      async function fetchEmployees() {
        const response = await fetch('/api/master/employees', {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': token
            },
          });
        const result = await response.json();
        const employees=result.value
        const searchQuery = employeeSearch.value.trim().toLowerCase();
        const selectedStatus = statusFilter.value;

        const tbody = document.querySelector("#employeeTable tbody");
        tbody.innerHTML = ''; 

        const filtered = employees.filter(emp => {
        const matchesSearch = emp.name.toLowerCase().includes(searchQuery) || emp.email.toLowerCase().includes(searchQuery);
        const matchesStatus = selectedStatus === 'all' || emp.status.toLowerCase() === selectedStatus;
        return matchesSearch && matchesStatus;
        });

        if (filtered.length === 0) {
          tbody.innerHTML = `<tr><td colspan="4">No employees found.</td></tr>`;
          return;
        }

        filtered.forEach(employee => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>
              <a href="" class="email-link" onclick="showAssetHistory('${employee.id}', '${employee.email}'); return false;">
                ${employee.email}
              </a>
            </td>
            <td>${employee.name}</td>
            <td>${employee.phone}</td>
            <td>
              <span class="badge ${employee.status === 'active' ? 'bg-success' : 'bg-secondary'}">
                ${employee.status}
              </span>
            </td>`;
          tbody.appendChild(row);
        });
      }

      fetchEmployees();

      searchBtn.addEventListener("click", fetchEmployees);
      statusFilter.addEventListener("change", fetchEmployees);

      const employeeList = document.querySelector('.employee-list');
      const employeeHistory = document.querySelector('.employee-history');
      const historyTableBody = document.querySelector('#historyTable tbody');
      const backToListBtn = document.getElementById('backToList');

      async function showAssetHistory(employeeId,employeeEmail) {

        document.getElementById('assetHistoryTitle').textContent = `Asset History of ${employeeEmail}`;
        employeeList.classList.add('d-none');
        employeeHistory.classList.remove('d-none');

        const response = await fetch(`/api/history/${employeeId}`, {
          headers: {
            'Authorization': token
          }
        });

        const result = await response.json();
        const history = result.value;

        historyTableBody.innerHTML = '';

        if (!history.length) {
          historyTableBody.innerHTML = `<tr><td colspan="6">No asset history found.</td></tr>`;
          return;
        }

        history.forEach(asset => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${asset.asset.make}</td>
            <td>${asset.asset.serialNo}</td>
            <td>${asset.asset.category}</td>
            <td>${asset.master.email}</td>
            <td>${asset.action}</td>
            <td>${asset.reason ? asset.reason : "-" }</td>
            <td>${new Date(asset.time).toLocaleDateString()}</td>
          `;
          historyTableBody.appendChild(row);
        });
      }

      backToListBtn.addEventListener('click', () => {
        employeeHistory.classList.add('d-none');
        employeeList.classList.remove('d-none');
        historyTableBody.innerHTML = '';
        fetchEmployees();
      });

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.4/dist/js/bootstrap.bundle.min.js" integrity="sha384-YUe2LzesAfftltw+PEaao2tjU/QATaW/rOitAq67e0CT0Zi2VVRL0oC4+gAaeBKu" crossorigin="anonymous")
