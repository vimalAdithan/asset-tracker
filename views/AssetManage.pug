doctype html
html
  head
    title Issue Asset - Asset Tracker
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.4/dist/css/bootstrap.min.css" integrity="sha384-DQvkBjpPgn7RC31MCQoOeC9TI2kdqa4+BSgNMNj8v77fdC77Kj5zpWFTJaaAoMbC" crossorigin="anonymous")
  body
    header.bg-primary.text-white.py-3.mb-4
      .container.d-flex.justify-content-between.align-items-center
        h1.h4.mb-0 Asset Manage
        nav
          a.btn.btn-light(href="/master") ← Back
    main.container.mt-4
      .d-flex.justify-content-end.align-items-center.mb-3.employee-actions
        .d-flex.align-items-center.gap-2.flex-nowrap
          input#employeeSearch.form-control(type="text", placeholder="Search employees...",style="width: 250px;")
          button(type="button")#searchBtn.btn.btn-outline-secondary Search
      .employee-list
        .table-responsive
          table#employeeTable.table.table-hover.table-bordered.align-middle.text-center
            thead.table-light
              tr
                th Email
                th Serial No
                th Make
                th Model
                th Actions
            tbody

    script.
      var token = localStorage.getItem('token');
      if (!token) {
        alert("Authentication token not found. Please log in.")
        window.location.href = '/';
      }

    script.
      const employeeSearch = document.getElementById("employeeSearch");
      const searchBtn = document.getElementById("searchBtn");

      async function fetchAssets() {
        const response = await fetch('/api/manage/asset', {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': token
            },
          });
        const result = await response.json();
        const Assets=result.value
        const searchQuery = employeeSearch.value.trim().toLowerCase();

        const tbody = document.querySelector("#employeeTable tbody");
        tbody.innerHTML = ''; 

        const filtered = Assets.filter(asset => {
        const matchesSearch = asset.serialNo.toLowerCase().includes(searchQuery) || asset.currentUserId.email.toLowerCase().includes(searchQuery);
        return matchesSearch;
        });

        if (filtered.length === 0) {
          tbody.innerHTML = `<tr><td colspan="5">No Employees found.</td></tr>`;
          return;
        }

        filtered.forEach(asset => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${asset.currentUser.email}</td>
            <td>${asset.serialNo}</td>
            <td>${asset.make}</td>
            <td>${asset.model}</td>
            <td>
              <button class="btn btn-sm btn-primary me-1 issue-btn" data-asset-id="${asset.serialNo}" onclick="manageAsset(this,'return')">Return</button>
              <button class="btn btn-sm btn-danger me-1 issue-btn" data-asset-id="${asset.serialNo}" onclick="manageAsset(this,'scrap')">Scrap</button>
            </td>`;
          tbody.appendChild(row);
        });
      }

      fetchAssets();

      searchBtn.addEventListener("click", fetchAssets);

      async function manageAsset(button,action) {
        const originalText = button.innerHTML;
        const serialNo = button.getAttribute('data-asset-id');

        if (!serialNo) {
          alert("serialNo is missing.");
          return;
        }

        let reason = null;
        if (action === "return") {
          reason = prompt("Please enter the reason for returning the asset:");
          if (!reason) {
            alert("Return reason is required.");
            return;
          }
        }else {
          const confirmScrap = confirm("Are you sure you want to scrap this asset?");
          if (!confirmScrap) return;
        }

        button.disabled = true;
        button.innerHTML = action === "scrap" ? 'Scrapping...' : "Returning...";

        try {
          const response = await fetch('/api/manage/asset', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': token
            },
            body: JSON.stringify({
              serialNo,
              action,
              ...(action === "return" && { reason }),
            })
          });

          const result = await response.json();

          if (result.code===200) {
            alert(`Asset ${action === "scrap" ? "scrapped" : "returned"} successfully!`);
            fetchAssets();
          } else {
            alert(result.msg || `Failed to ${action === "scrap" ? "scrap" : "return"} asset.`);
          }
        } catch (err) {
          alert("An error occurred: " + err.message);
        } finally {
          button.disabled = false;
          button.innerHTML = originalText;
        }
      }

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.4/dist/js/bootstrap.bundle.min.js" integrity="sha384-YUe2LzesAfftltw+PEaao2tjU/QATaW/rOitAq67e0CT0Zi2VVRL0oC4+gAaeBKu" crossorigin="anonymous")
