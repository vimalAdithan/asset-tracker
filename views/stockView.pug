doctype html
html
  head
    title Stock View - Asset Tracker
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.4/dist/css/bootstrap.min.css" integrity="sha384-DQvkBjpPgn7RC31MCQoOeC9TI2kdqa4+BSgNMNj8v77fdC77Kj5zpWFTJaaAoMbC" crossorigin="anonymous")
    script(src="https://cdn.jsdelivr.net/npm/jwt-decode@3.1.2/build/jwt-decode.min.js")

  body
    header.bg-primary.text-white.py-3.mb-4
      .container.d-flex.justify-content-between.align-items-center
        h1.h4.mb-0 Stock View
        nav
          a.btn.btn-light(href="/master") ← Back
    main
      .container
        .row#stockCards

    script.
      var token = localStorage.getItem('token');
      if (!token) {
        alert("Authentication token not found. Please log in.")
        window.location.href = '/';
      }else{
        if(jwt_decode(token)?.role !== "master"){
          alert("Authentication token not found. Please log in.")
          window.location.href = '/';
        }
      }

    script.
      async function fetchStock() {
        const response = await fetch('/api/stock', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': token
          }
        });
        const result = await response.json();
        let stock=[]
        if(result.code===200){
          stock=result.value
        }
        const cardContainer = document.getElementById("stockCards");
        cardContainer.innerHTML = '';

        stock.forEach(stockItem => {
          const cardCol = document.createElement('div');
          cardCol.className = 'col-md-4 mb-4';

          cardCol.innerHTML = `
            <div class="card h-100 shadow-sm border-primary">
              <div class="card-header bg-primary text-white text-center">
                <h5 class="mb-0 text-capitalize">${stockItem.category}</h5>
              </div>
              <div class="card-body">
                <ul class="list-group list-group-flush">
                  <li class="list-group-item d-flex justify-content-between">
                    <strong>Assigned:</strong>
                    <span>${stockItem.assigned}</span>
                  </li>
                  <li class="list-group-item d-flex justify-content-between">
                    <strong>Available:</strong>
                    <span>${stockItem.returned}</span>
                  </li>
                  <li class="list-group-item d-flex justify-content-between">
                    <strong>Scrapped:</strong>
                    <span>${stockItem.scrapped}</span>
                  </li>
                  <li class="list-group-item d-flex justify-content-between text-info fw-semibold">
                    <strong>Total Assets:</strong>
                    <span>${parseInt(stockItem.assigned) + parseInt(stockItem.returned) + parseInt(stockItem.scrapped)}</span>
                  </li>
                </ul>
              </div>
            </div>
          `;

          cardContainer.appendChild(cardCol);
        });
      }

      fetchStock();
